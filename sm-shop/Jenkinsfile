#!groovy
pipeline {
    agent { label 'rpm' }

    stages {
        stage('Build') {
            steps {
                echo '------------ Building ------------'
                withEnv(["JAVA_HOME=${tool 'jdk1.8'}", "PATH+MAVEN=${tool 'm2'}/bin:${env.JAVA_HOME}/bin"]) {
                    sh "mvn --batch-mode -V -U -e clean compile"
                }
            }
        }
        stage('Test') {
            steps {
                echo '------------ Testing ------------'
                withEnv(["JAVA_HOME=${tool 'jdk1.8'}", "PATH+MAVEN=${tool 'm2'}/bin:${env.JAVA_HOME}/bin"]) {
                    sh "mvn --batch-mode -V -U -e clean test"
                }
            }
        }
        stage('Build aftifacts war & docker image') {
            steps {
                echo '------------ Building the WAR ------------'
                withEnv(["JAVA_HOME=${tool 'jdk1.8'}", "PATH+MAVEN=${tool 'm2'}/bin:${env.JAVA_HOME}/bin"]) {
                    sh "mvn --batch-mode -V -U -e clean package -DskipTests"
                }
//                Deploy should be here....
                echo '------------ Building the Shopizer Docker Image ------------'
                build job: 'Build-Docker-Image', parameters: [string(name: 'PARENT_BUILD_NUM', value: '${BUILD_NUMBER}')]
                archiveArtifacts artifacts: 'sm-shop/target/*.war', onlyIfSuccessful: true
            }

        }
        stage('Integration testing') {
            steps {
                echo 'Running shopize:${BUILD_NUMBER} docker image'
                build job: 'Run-Docker-Image', parameters: [string(name: 'IMAGE_VERSION', value: '${BUILD_NUMBER}'),
                                                            string(name: 'IMAGE_NAME', value: 'shopizer')]
                echo 'This is where we would setup integration tests - selnium etc...'
            }
        }
    }
}