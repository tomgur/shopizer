#!groovy
import java.rmi.server.ExportException

pipeline {
    agent { label 'rpm' }

    stages {
        try {
            stage('Build') {
                steps {
                    echo '------------ Building ------------'

                    withEnv(["JAVA_HOME=${tool 'jdk1.8'}", "PATH+MAVEN=${tool 'm2'}/bin:${env.JAVA_HOME}/bin"]) {
                        sh "mvn --batch-mode -V -U -e clean compile"
                    }

                }
            }
        } catch (Exception e) {
            error("Build Failed: " + e.printStackTrace())
        }
        try {stage('Test') {
            steps {
                echo '------------ Testing ------------'

                    withEnv(["JAVA_HOME=${tool 'jdk1.8'}", "PATH+MAVEN=${tool 'm2'}/bin:${env.JAVA_HOME}/bin"]) {
                        sh "mvn --batch-mode -V -U -e clean test"
                    }

            }
        }
        } catch (Exception e) {
            error("Build Failed: " + e.printStackTrace())
        }
        try {
            stage('Build WAR') {
            steps {
                echo '------------ Building the WAR ------------'

                    withEnv(["JAVA_HOME=${tool 'jdk1.8'}", "PATH+MAVEN=${tool 'm2'}/bin:${env.JAVA_HOME}/bin"]) {
                        sh "mvn --batch-mode -V -U -e clean package -DskipTests"
                    }
                    archiveArtifacts artifacts: 'sm-shop/target/*.war', onlyIfSuccessful: true
                }
            }

        } catch (Exception e) {
            error("Build failed because: " + e.printStackTrace())
        }
    }
}